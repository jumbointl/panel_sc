class Autogenerated {
  int? id;
  String? uid;
  ADClientID? aDClientID;
  ADClientID? aDOrgID;
  bool? isActive;
  String? created;
  ADClientID? createdBy;
  String? updated;
  ADClientID? updatedBy;
  String? name;
  bool? isSummary;
  ADClientID? cUOMID;
  bool? isStocked;
  bool? isPurchased;
  bool? isSold;
  int? volume;
  int? weight;
  String? value;
  ADClientID? mProductCategoryID;
  ADClientID? cTaxCategoryID;
  String? uPC;
  String? sKU;
  int? shelfWidth;
  int? shelfHeight;
  int? shelfDepth;
  int? unitsPerPallet;
  bool? discontinued;
  ADClientID? salesRepID;
  bool? isBOM;
  bool? isInvoicePrintDetails;
  bool? isPickListPrintDetails;
  bool? isVerified;
  ProductType? productType;
  int? guaranteeDays;
  MAttributeSetInstanceID? mAttributeSetInstanceID;
  int? guaranteeDaysMin;
  bool? isWebStoreFeatured;
  bool? isSelfService;
  bool? isDropShip;
  bool? isExcludeAutoDelivery;
  int? unitsPerPack;
  int? lowLevel;
  bool? isKanban;
  bool? isManufactured;
  bool? isPhantom;
  bool? isOwnBox;
  bool? isAutoProduce;
  int? mOLIMProductID;
  bool? mOLIIsLocalVendor;
  String? modelName;

  Autogenerated(
      {this.id,
      this.uid,
      this.aDClientID,
      this.aDOrgID,
      this.isActive,
      this.created,
      this.createdBy,
      this.updated,
      this.updatedBy,
      this.name,
      this.isSummary,
      this.cUOMID,
      this.isStocked,
      this.isPurchased,
      this.isSold,
      this.volume,
      this.weight,
      this.value,
      this.mProductCategoryID,
      this.cTaxCategoryID,
      this.uPC,
      this.sKU,
      this.shelfWidth,
      this.shelfHeight,
      this.shelfDepth,
      this.unitsPerPallet,
      this.discontinued,
      this.salesRepID,
      this.isBOM,
      this.isInvoicePrintDetails,
      this.isPickListPrintDetails,
      this.isVerified,
      this.productType,
      this.guaranteeDays,
      this.mAttributeSetInstanceID,
      this.guaranteeDaysMin,
      this.isWebStoreFeatured,
      this.isSelfService,
      this.isDropShip,
      this.isExcludeAutoDelivery,
      this.unitsPerPack,
      this.lowLevel,
      this.isKanban,
      this.isManufactured,
      this.isPhantom,
      this.isOwnBox,
      this.isAutoProduce,
      this.mOLIMProductID,
      this.mOLIIsLocalVendor,
      this.modelName});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    uid = json['uid'];
    aDClientID = json['AD_Client_ID'] != null
        ? new ADClientID.fromJson(json['AD_Client_ID'])
        : null;
    aDOrgID = json['AD_Org_ID'] != null
        ? new ADClientID.fromJson(json['AD_Org_ID'])
        : null;
    isActive = json['IsActive'];
    created = json['Created'];
    createdBy = json['CreatedBy'] != null
        ? new ADClientID.fromJson(json['CreatedBy'])
        : null;
    updated = json['Updated'];
    updatedBy = json['UpdatedBy'] != null
        ? new ADClientID.fromJson(json['UpdatedBy'])
        : null;
    name = json['Name'];
    isSummary = json['IsSummary'];
    cUOMID = json['C_UOM_ID'] != null
        ? new ADClientID.fromJson(json['C_UOM_ID'])
        : null;
    isStocked = json['IsStocked'];
    isPurchased = json['IsPurchased'];
    isSold = json['IsSold'];
    volume = json['Volume'];
    weight = json['Weight'];
    value = json['Value'];
    mProductCategoryID = json['M_Product_Category_ID'] != null
        ? new ADClientID.fromJson(json['M_Product_Category_ID'])
        : null;
    cTaxCategoryID = json['C_TaxCategory_ID'] != null
        ? new ADClientID.fromJson(json['C_TaxCategory_ID'])
        : null;
    uPC = json['UPC'];
    sKU = json['SKU'];
    shelfWidth = json['ShelfWidth'];
    shelfHeight = json['ShelfHeight'];
    shelfDepth = json['ShelfDepth'];
    unitsPerPallet = json['UnitsPerPallet'];
    discontinued = json['Discontinued'];
    salesRepID = json['SalesRep_ID'] != null
        ? new ADClientID.fromJson(json['SalesRep_ID'])
        : null;
    isBOM = json['IsBOM'];
    isInvoicePrintDetails = json['IsInvoicePrintDetails'];
    isPickListPrintDetails = json['IsPickListPrintDetails'];
    isVerified = json['IsVerified'];
    productType = json['ProductType'] != null
        ? new ProductType.fromJson(json['ProductType'])
        : null;
    guaranteeDays = json['GuaranteeDays'];
    mAttributeSetInstanceID = json['M_AttributeSetInstance_ID'] != null
        ? new MAttributeSetInstanceID.fromJson(
            json['M_AttributeSetInstance_ID'])
        : null;
    guaranteeDaysMin = json['GuaranteeDaysMin'];
    isWebStoreFeatured = json['IsWebStoreFeatured'];
    isSelfService = json['IsSelfService'];
    isDropShip = json['IsDropShip'];
    isExcludeAutoDelivery = json['IsExcludeAutoDelivery'];
    unitsPerPack = json['UnitsPerPack'];
    lowLevel = json['LowLevel'];
    isKanban = json['IsKanban'];
    isManufactured = json['IsManufactured'];
    isPhantom = json['IsPhantom'];
    isOwnBox = json['IsOwnBox'];
    isAutoProduce = json['IsAutoProduce'];
    mOLIMProductID = json['MOLI_M_Product_ID'];
    mOLIIsLocalVendor = json['MOLI_IsLocalVendor'];
    modelName = json['model-name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['id'] = this.id;
    data['uid'] = this.uid;
    if (this.aDClientID != null) {
      data['AD_Client_ID'] = this.aDClientID!.toJson();
    }
    if (this.aDOrgID != null) {
      data['AD_Org_ID'] = this.aDOrgID!.toJson();
    }
    data['IsActive'] = this.isActive;
    data['Created'] = this.created;
    if (this.createdBy != null) {
      data['CreatedBy'] = this.createdBy!.toJson();
    }
    data['Updated'] = this.updated;
    if (this.updatedBy != null) {
      data['UpdatedBy'] = this.updatedBy!.toJson();
    }
    data['Name'] = this.name;
    data['IsSummary'] = this.isSummary;
    if (this.cUOMID != null) {
      data['C_UOM_ID'] = this.cUOMID!.toJson();
    }
    data['IsStocked'] = this.isStocked;
    data['IsPurchased'] = this.isPurchased;
    data['IsSold'] = this.isSold;
    data['Volume'] = this.volume;
    data['Weight'] = this.weight;
    data['Value'] = this.value;
    if (this.mProductCategoryID != null) {
      data['M_Product_Category_ID'] = this.mProductCategoryID!.toJson();
    }
    if (this.cTaxCategoryID != null) {
      data['C_TaxCategory_ID'] = this.cTaxCategoryID!.toJson();
    }
    data['UPC'] = this.uPC;
    data['SKU'] = this.sKU;
    data['ShelfWidth'] = this.shelfWidth;
    data['ShelfHeight'] = this.shelfHeight;
    data['ShelfDepth'] = this.shelfDepth;
    data['UnitsPerPallet'] = this.unitsPerPallet;
    data['Discontinued'] = this.discontinued;
    if (this.salesRepID != null) {
      data['SalesRep_ID'] = this.salesRepID!.toJson();
    }
    data['IsBOM'] = this.isBOM;
    data['IsInvoicePrintDetails'] = this.isInvoicePrintDetails;
    data['IsPickListPrintDetails'] = this.isPickListPrintDetails;
    data['IsVerified'] = this.isVerified;
    if (this.productType != null) {
      data['ProductType'] = this.productType!.toJson();
    }
    data['GuaranteeDays'] = this.guaranteeDays;
    if (this.mAttributeSetInstanceID != null) {
      data['M_AttributeSetInstance_ID'] =
          this.mAttributeSetInstanceID!.toJson();
    }
    data['GuaranteeDaysMin'] = this.guaranteeDaysMin;
    data['IsWebStoreFeatured'] = this.isWebStoreFeatured;
    data['IsSelfService'] = this.isSelfService;
    data['IsDropShip'] = this.isDropShip;
    data['IsExcludeAutoDelivery'] = this.isExcludeAutoDelivery;
    data['UnitsPerPack'] = this.unitsPerPack;
    data['LowLevel'] = this.lowLevel;
    data['IsKanban'] = this.isKanban;
    data['IsManufactured'] = this.isManufactured;
    data['IsPhantom'] = this.isPhantom;
    data['IsOwnBox'] = this.isOwnBox;
    data['IsAutoProduce'] = this.isAutoProduce;
    data['MOLI_M_Product_ID'] = this.mOLIMProductID;
    data['MOLI_IsLocalVendor'] = this.mOLIIsLocalVendor;
    data['model-name'] = this.modelName;
    return data;
  }
}

class ADClientID {
  String? propertyLabel;
  int? id;
  String? identifier;
  String? modelName;

  ADClientID({this.propertyLabel, this.id, this.identifier, this.modelName});

  ADClientID.fromJson(Map<String, dynamic> json) {
    propertyLabel = json['propertyLabel'];
    id = json['id'];
    identifier = json['identifier'];
    modelName = json['model-name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['propertyLabel'] = this.propertyLabel;
    data['id'] = this.id;
    data['identifier'] = this.identifier;
    data['model-name'] = this.modelName;
    return data;
  }
}

class ProductType {
  String? propertyLabel;
  String? id;
  String? identifier;
  String? modelName;

  ProductType({this.propertyLabel, this.id, this.identifier, this.modelName});

  ProductType.fromJson(Map<String, dynamic> json) {
    propertyLabel = json['propertyLabel'];
    id = json['id'];
    identifier = json['identifier'];
    modelName = json['model-name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['propertyLabel'] = this.propertyLabel;
    data['id'] = this.id;
    data['identifier'] = this.identifier;
    data['model-name'] = this.modelName;
    return data;
  }
}

class MAttributeSetInstanceID {
  String? propertyLabel;
  int? id;
  String? modelName;

  MAttributeSetInstanceID({this.propertyLabel, this.id, this.modelName});

  MAttributeSetInstanceID.fromJson(Map<String, dynamic> json) {
    propertyLabel = json['propertyLabel'];
    id = json['id'];
    modelName = json['model-name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['propertyLabel'] = this.propertyLabel;
    data['id'] = this.id;
    data['model-name'] = this.modelName;
    return data;
  }
}
